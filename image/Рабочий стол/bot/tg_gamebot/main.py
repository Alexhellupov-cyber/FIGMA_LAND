from settings import cfg
import time, random
import telebot
from telebot import types
import sqlite3
from captcha.image import ImageCaptcha
from os import remove

print("""
-----------------------------------
–ò–ì–†–û–í–û–ô –ë–û–¢ Telegram –ó–ê–ü–£–©–ï–ù
–°–û–ó–î–ê–¢–ï–õ–¨ –ö–û–î–ê: 0xSn1kky
YouTube: https://www.youtube.com/channel/UCo3yqAlAobt4KB6o9UwQxeg
-----------------------------------
""")

# –í–°–ï –ù–ê–°–¢–†–û–ô–ö–ò –í settings.py

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db = sqlite3.connect('database.db', check_same_thread=False)
cursor = db.cursor()

# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
bot = telebot.TeleBot('7296845868:AAFWvXxzvSeFvN4DEekD9FJDKIZWd_LDoFE')

# —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü

cursor.execute("""CREATE TABLE IF NOT EXISTS users(
    id INTEGER,
    nick TEXT,
    money INTEGER,
    bonus_last INTEGER,
    car_name TEXT,
    home_name TEXT,
    phone_name TEXT,
    energy INTEGER,
    lvl INTEGER,
    admin INTEGER,
    status TEXT,
    work INTEGER,
    work_name TEXT,
    work_zp INTEGER,
    ban INTEGER,
    bank INTEGER
)""")
db.commit()

# –≤–∞–∂–Ω–æ–µ
carss = ({
    "car_name_1": "–ñ–∏–≥—É–ª—å",
    "car_cost_1": 60000,

    "car_name_2": "Lada Granta Cross",
    "car_cost_2": 280000,

    "car_name_3": "Audi RS 6",
    "car_cost_3": 10000000,

    "car_name_4": "BMW M3",
    "car_cost_4": 50000000,

    "car_name_5": "Mustang GT 500",
    "car_cost_5": 100000000,

    "car_name_6": "Acura NSX",
    "car_cost_6": 150000000,

    "car_name_7": "Porsche 911",
    "car_cost_7": 300000000,

    "car_name_8": "Bugatti Chiron",
    "car_cost_8": 600000000,

    "car_name_9": "Lamborghini Huracan",
    "car_cost_9": 950000000
})

homes = ({
    "home_name_1": "–ö–æ—Ä–æ–±–∫–∞",
    "home_cost_1": 10000,

    "home_name_2": "–°–∞—Ä–∞–π",
    "home_cost_2": 70000,

    "home_name_3": "–ì–∞—Ä–∞–∂",
    "home_cost_3": 100000,

    "home_name_4": "–ö–æ–º–Ω–∞—Ç–∞ –≤ –æ–±—â–∞–≥–µ",
    "home_cost_4": 500000,

    "home_name_5": "–û–¥–Ω–æ–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞",
    "home_cost_5": 900000,

    "home_name_6": "–ö–æ—Ç—Ç–µ–¥–∂",
    "home_cost_6": 10000000,

    "home_name_7": "–î–æ–º –Ω–∞ —Ä—É–±–ª—ë–≤–∫–µ",
    "home_cost_7": 300000000,

    "home_name_8": "Moscow City",
    "home_cost_8": 700000000,

    "home_name_9": "–ú–∞–ª—å–¥–∏–≤—ã",
    "home_cost_9": 900000000,

    "home_name_10": "–°–≤–æ—è –ø–ª–∞–Ω–µ—Ç–∞",
    "home_cost_10": 1000000000
})

phones = ({
    "phone_name_1": "–¢–∞–ø–æ–∫",
    "phone_cost_1": 1000,

    "phone_name_2": "Nokia 3310",
    "phone_cost_2": 5000,

    "phone_name_3": "Samsung Galaxy S8",
    "phone_cost_3": 20000,

    "phone_name_4": "Xiaomi Mi Mix",
    "phone_cost_4": 30000,

    "phone_name_5": "iPhone X",
    "phone_cost_5": 70000,

    "phone_name_6": "Samsung Z Flip",
    "phone_cost_6": 100000,

    "phone_name_7": "iPhone 14",
    "phone_cost_7": 600000,

    "phone_name_8": "iPhone 14 Pro Max",
    "phone_cost_8": 900000
})

workss = ({
    'work_name_1': "–î–≤–æ—Ä–Ω–∏–∫",
    "work_zp_1": 6000,
    'work_lvl_1': 1,

    "work_name_2": "–û—Ñ–∏—Ü–∏–∞–Ω—Ç",
    "work_zp_2": 30000,
    "work_lvl_2": 10,

    "work_name_3": "–ü–æ–≤–∞—Ä",
    "work_zp_3": 70000,
    "work_lvl_3": 15,

    "work_name_4": "–í—Ä–∞—á",
    "work_zp_4": 100000,
    "work_lvl_4": 25,

    "work_name_5": "–°—Ç–æ–º–∞—Ç–æ–ª–æ–≥",
    "work_zp_5": 700000,
    "work_lvl_5": 50,

    "work_name_6": "–ò–Ω–∂–µ–Ω–µ—Ä",
    "work_zp_6": 3000000,
    "work_lvl_6": 70,

    "work_name_7": "–ö–æ—Å–º–æ–Ω–∞–≤—Ç",
    "work_zp_7": 8000000,
    "work_lvl_7": 80,

    "work_name_8": "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç",
    "work_zp_8": 10000000,
    "work_lvl_8": 100
})

# –º–∞–∫—Å —Å–∏–º–≤–æ–ª—ã
PREFIX_MAX = 10
NICKNAME_MAX = 15
ENERGY_START = 10
ENERGY_MAX = 50

# —ç–º–æ–¥–∑–∏
EMOJI_HI = 'üëã'
EMOJI_LIKE = 'üëç'
EMOJI_DISLIKE = 'üëé'
EMOJI_YES = '‚úÖ'
EMOJI_NO = '‚ùå'
EMOJI_W = '‚ùì'
EMOJI_WARN = '‚ö†Ô∏è'
SMILE = ['üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòé', 'üò±']
EMOJI_SAD = ['üòû', 'üòî', '‚òπÔ∏è', 'üòñ', 'üò¢']


# –∫–æ–º–∞–Ω–¥–∞ start

@bot.message_handler(commands=['start'])
def start(message):
    usrid = message.chat.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
    info = cursor.execute(f"SELECT id FROM users WHERE id = {usrid}").fetchone()
    if info is None:
        cursor.execute("INSERT INTO users VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", (
            usrid, message.from_user.first_name, cfg['money_on_start'], 0, "–ë–µ–∑ –º–∞—à–∏–Ω—ã", "–ë–µ–∑ –¥–æ–º–∞",
            "–ë–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞", ENERGY_START, 1, 0, "–ù–æ–≤–∏—á–µ–∫", 0, "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π", 0, 0, 0))
        db.commit()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton(text="üíµ –ë–∞–ª–∞–Ω—Å")
        btn2 = types.KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
        btn3 = types.KeyboardButton(text="‚öí –†–∞–±–æ—Ç–∞—Ç—å")
        btn4 = types.KeyboardButton(text=f"{EMOJI_W} –†–µ–ø–æ—Ä—Ç")
        btn5 = types.KeyboardButton(text="üìú –ü–æ–º–æ—â—å")
        btn6 = types.KeyboardButton(text="üí† –ë–æ–Ω—É—Å")
        markup.add(btn1, btn2, btn3, btn6)
        markup.add(btn4, btn5)
        bot.send_message(message.chat.id,
                     f"{EMOJI_HI} –ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} –≤–∏–∂—É —Ç—ã –Ω–æ–≤–µ–Ω—å–∫–∏–π —è {cfg['botname']}. T—ã –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ! –ù–∞–ø–∏—à–∏ \"–ü–æ–º–æ—â—å\" —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", reply_markup=markup)
    else:
        pass


@bot.message_handler(func=lambda message: message.text.lower() == '–±–∞–ª–∞–Ω—Å' or message.text == 'üíµ –ë–∞–ª–∞–Ω—Å')
def balance(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        balanceu = cursor.execute(f'SELECT money FROM users WHERE id = {message.chat.id}').fetchone()
        userbank = cursor.execute(f'SELECT bank FROM users WHERE id = {message.chat.id}').fetchone()
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bot.send_message(message.chat.id, f"{usernick[0]} üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balanceu[0]}$ \n üí≥ –í –±–∞–Ω–∫–µ: {userbank[0]}$")


@bot.message_handler(func=lambda message: message.text.lower() == '–±–æ–Ω—É—Å' or message.text == 'üí† –ë–æ–Ω—É—Å')
def bonus(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bonust = cursor.execute(f'SELECT bonus_last FROM users WHERE id = {message.chat.id}').fetchone()
        s = time.localtime(time.time())
        if bonust[0] != s.tm_mday:
            cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (cfg['bonus'],))
            cursor.execute(f"UPDATE users SET bonus_last = ? WHERE id = {message.chat.id}",
                           (time.localtime(time.time()).tm_mday,))
            db.commit()
            bot.send_photo(message.chat.id, 'https://pngimg.com/uploads/money/money_PNG3538.png',
                           f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ {cfg['bonus']}$ {SMILE[5]}")
        else:
            bot.reply_to(message, f"{usernick[0]} –í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å {EMOJI_SAD[0]}")


@bot.message_handler(func=lambda message: message.text.lower() == '—ç–Ω–µ—Ä–≥–∏—è')
def energy(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        energyu = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        kb = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton(text="‚ö°Ô∏è –ü–æ–ø–æ–ª–Ω–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é", callback_data='energy_buy')
        kb.add(btn1)
        bot.send_message(message.chat.id,
                         f"{usernick[0]} ‚ö°Ô∏è –í–∞—à —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏: {energyu[0]} \n –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏: 3000$",
                         reply_markup=kb)


@bot.callback_query_handler(func=lambda call: call.data == 'energy_buy')
def energy_buy(call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        energyu = cursor.execute(f'SELECT energy FROM users WHERE id = {call.message.chat.id}').fetchone()
        if energyu[0] == ENERGY_MAX:
            bot.reply_to(call.message, f"{usernick[0]} –£ –≤–∞—Å —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ {EMOJI_SAD[2]}")
        else:
            balanceu = cursor.execute(f'SELECT money FROM users WHERE id = {call.message.chat.id}').fetchone()
            if balanceu[0] > 2999:
                cursor.execute(f"UPDATE users SET energy = energy + 1 WHERE id = {call.message.chat.id}")
                cursor.execute(f"UPDATE users SET money = money - 3000 WHERE id = {call.message.chat.id}")
                db.commit()
                bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ—é —ç–Ω–µ—Ä–≥–∏—é!")
            else:
                bot.send_message(call.message.chat.id,
                                 f"{usernick[0]} –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ —á—Ç–æ–±—ã –ø–æ–≤—ã—Å–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é {EMOJI_SAD[3]}")


@bot.message_handler(func=lambda message: message.text.lower() == '–≤–∑–ª–æ–º')
def hack(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        energyu = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        if energyu[0] < 1:
            bot.send_message(message.chat.id, f"{usernick[0]} –£ –≤–∞—Å –º–∞–ª–æ —ç–Ω–µ—Ä–≥–∏–∏ {EMOJI_SAD[4]}")
        else:
            give_money = random.randint(3000, 20000)
            random_photo = random.SystemRandom().choice(
                ["https://kartinkin.net/uploads/posts/2022-03/1646196653_75-kartinkin-net-p-kartinki-khakera-85.jpg",
                 "https://—é—Ä–Ω–∞–¥–∑–æ—Ä.—Ä—Ñ/wp-content/uploads/2019/02/how-to-protect-yourself-from-hackers.jpeg",
                 "https://discover24.ru/wp-content/uploads/2020/11/0001-scaled.jpg"])
            bot.send_photo(message.chat.id, random_photo,
                           f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–ª–∏ –ø–µ–Ω—Ç–∞–≥–æ–Ω –∏ –ø–æ–ª—É—á–∏–ª–∏ {give_money}$")
            cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (give_money,))
            cursor.execute(f"UPDATE users SET energy = energy - 1 WHERE id = {message.chat.id}")
            db.commit()


@bot.message_handler(func=lambda message: message.text.lower() == '–Ω–∏–∫')
def nickname(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Å–µ–±–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å")
    bot.register_next_step_handler(msg, nick_set)


def nick_set(message):
    if message.text.lower() == '–≤—ã–∫–ª' or message.text.lower() == 'off':
        username = message.from_user.first_name
        cursor.execute(f"UPDATE users SET nick = ? WHERE id = {message.chat.id}", (username,))
        db.commit()
        bot.send_message(message.chat.id, "–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –Ω–∏–∫")
    else:
        if len(message.text) > NICKNAME_MAX:
            bot.send_message(message.chat.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –Ω–∏–∫!")
        else:
            username = message.text
            cursor.execute(f"UPDATE users SET nick = ? WHERE id = {message.chat.id}", (username,))
            db.commit()
            bot.send_message(message.chat.id, "–í—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –Ω–æ–≤—ã–π –Ω–∏–∫")


@bot.message_handler(func=lambda message: message.text.lower() == '–≥—Ä–∞–±–∏—Ç—å' or message.text.lower() == '–æ–≥—Ä–∞–±–∏—Ç—å')
def grabit(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        energyu = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        if energyu[0] < 1:
            bot.send_message(message.chat.id, f"{usernick[0]} –£ –≤–∞—Å –º–∞–ª–æ —ç–Ω–µ—Ä–≥–∏–∏ {EMOJI_SAD[4]}")
        else:
            give_money = random.randint(3000, 15000)
            random_photo = random.SystemRandom().choice(
                ["https://proumdom.ru/wp-content/uploads/2020/12/21567875464789.jpg",
                 "https://media.1777.ru/images/images_processing/881/8817189501727565.jpeg",
                 "https://news.store.rambler.ru/img/dfc6a83e751a8f423e52f62ebb426346?img-format=auto&img-1-resize=height:710",
                 "https://liter.kz/cache/imagine/1200/uploads/news/2022/03/18/62345d2b2ec99547306734.jpg"])
            bot.send_photo(message.chat.id, random_photo,
                           f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ –±–∞–Ω–∫ –∏ –ø–æ–ª—É—á–∏–ª–∏ {give_money}$")
            cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (give_money,))
            cursor.execute(f"UPDATE users SET energy = energy - 1 WHERE id = {message.chat.id}")
            db.commit()


@bot.message_handler(func=lambda message: message.text.lower() == '–¥–∞–π–≤–∏–Ω–≥' or message.text.lower() == '–ª–æ–≤–∏—Ç—å')
def lovit(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        energyu = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        if energyu[0] < 1:
            bot.send_message(message.chat.id, f"{usernick[0]} –£ –≤–∞—Å –º–∞–ª–æ —ç–Ω–µ—Ä–≥–∏–∏ {EMOJI_SAD[4]}")
        else:
            give_money = random.randint(3000, 10000)
            random_photo = random.SystemRandom().choice(
                ["https://wp-s.ru/wallpapers/5/15/311821487171135/foto-ryby-kloun-v-vodoroslyax.jpg",
                 "https://kartinkin.net/pics/uploads/posts/2022-07/1657833006_5-kartinkin-net-p-golubaya-riba-zhivotnie-krasivo-foto-5.jpg",
                 "https://klike.net/uploads/posts/2022-09/1662463935_v-27.jpg",
                 "https://klev26.ru/wp-content/uploads/b/d/4/bd40f13a82154aa08445aee40cf1186d.jpeg",
                 "https://vsegda-pomnim.com/uploads/posts/2022-04/1651050744_81-vsegda-pomnim-com-p-morskie-ribi-foto-99.jpg"])
            random_fish = random.SystemRandom().choice(["–†–µ–¥–∫—É—é —Ä—ã–±—É", "–ö–∞—Ä–ø–∞", "–©—É–∫—É", "–†—ã–±—É —Ñ—É–≥—É"])
            bot.send_photo(message.chat.id, random_photo,
                           f"{usernick[0]} –í—ã –ø–æ–π–º–∞–ª–∏ {random_fish} –ø—Ä–æ–¥–∞–≤ —ç—Ç—É —Ä—ã–±—É –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {give_money}$")
            cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (give_money,))
            cursor.execute(f"UPDATE users SET energy = energy - 1 WHERE id = {message.chat.id}")
            db.commit()


@bot.message_handler(func=lambda message: message.text.lower() == '–∫–∞–ø—á–∞')
def captcha_game(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        image = ImageCaptcha(width=280, height=90)
        c1 = random.randint(1, 10)
        c2 = random.SystemRandom().choice(["ab", "bao", "owmc", "olwqw", "bqof", "kwsl", "qxaw", "ow1"])
        c3 = random.randint(1, 35)
        global cptch_0
        cptch_0 = f'{c1}{c2}{c3}'
        data = image.generate(f"{c1}{c2}{c3}")
        image.write(f"{c1}{c2}{c3}", 'img.png')
        file = open('img.png', 'rb')
        msg = bot.send_photo(message.chat.id, file, f"{usernick[0]} –í–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É –≤–µ—Ä–Ω–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å")
        file.close()
        remove("img.png")
        print(cptch_0)
        bot.register_next_step_handler(msg, cptgame)


def cptgame(message):
    if message.text.lower() == cptch_0.lower():
        bot.send_message(message.chat.id, "–í—ã —É–≥–∞–¥–∞–ª–∏  –∫–∞–ø—á—É –∑–∞ —ç—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 5000$")
        cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (5000,))
        db.commit()
    else:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ –∫–∞–ø—á—É")


@bot.message_handler(func=lambda message: message.text.lower() == '–ø–æ—Ö–æ–¥')
def poxod(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        energyu = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        if energyu[0] < 1:
            bot.send_message(message.chat.id, f"{usernick[0]} –£ –≤–∞—Å –º–∞–ª–æ —ç–Ω–µ—Ä–≥–∏–∏ {EMOJI_SAD[4]}")
        else:
            give_money = random.randint(3000, 10000)
            random_photo = random.SystemRandom().choice(
                ["https://i.pinimg.com/736x/2e/f6/57/2ef657e1b42c38f2ae435eaaceb89d7a.jpg",
                 "https://avatars.dzeninfra.ru/get-zen_doc/222865/pub_5cc40f54427b3c00be0314e2_5cc40fc43d89f500b3ced391/scale_1200",
                 "https://obzor174.ru/sites/default/files/pubs/2c412260ce4ec76fcc2cd942b0fbda81.jpg"])
            bot.send_photo(message.chat.id, random_photo,
                           f"{usernick[0]} –í—ã –ø–æ—à–ª–∏ –≤ –ø–æ—Ö–æ–¥ –≤ –ø–æ—Ö–æ–¥–µ –≤—ã –Ω–∞—à–ª–∏ {give_money}$")
            cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (give_money,))
            cursor.execute(f"UPDATE users SET energy = energy - 1 WHERE id = {message.chat.id}")
            db.commit()


@bot.message_handler(func=lambda message: message.text.lower() == '–∫—É–±–∏–∫')
def cube1(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        msg = bot.send_message(message.chat.id, f"{usernick[0]} –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Å—Ç–∞–≤–∏—Ç–µ")
        bot.register_next_step_handler(msg, cube2)


def cube2(message):
    try:
        global stavka_cubik
        stavka_cubik = int(message.text)
        usermoney = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
        if usermoney[0] >= stavka_cubik:
            if stavka_cubik > 0:
                msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Å—Ç–∞–≤–∏—Ç–µ [1-6]")
                bot.register_next_step_handler(msg, cube3)
            else:
                bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª–µ–µ 0!")
        else:
            bot.reply_to(message, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏")
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


def cube3(message):
    try:
        cube_num = int(message.text)
        if cube_num > 6:
            bot.send_message(message.chat.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 6!")
        else:
            dicee = bot.send_dice(message.chat.id, 'üé≤')
            usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
            if dicee.dice.value == cube_num:
                cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (stavka_cubik,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏ {SMILE[2]}")
            else:
                cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {message.chat.id}", (stavka_cubik,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {EMOJI_SAD[4]}")
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@bot.message_handler(func=lambda message: message.text.lower() == '–¥–∞—Ä—Ç—Å')
def darts(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏")
        bot.register_next_step_handler(msg, darts2)


def darts2(message):
    try:
        stavka_dice = int(message.text)
        moneyuser = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        if moneyuser[0] < stavka_dice:
            bot.reply_to(message, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏")
        else:
            dicee = bot.send_dice(message.chat.id, 'üéØ')
            if dicee.dice.value == 6:
                cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏ {SMILE[2]}")
            else:
                cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {EMOJI_SAD[4]}")
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


# @bot.message_handler(func=lambda message: message.text.lower() == '—Ç–µ—Å—Ç –¥–∞–π—Å')
# def tstdice(message):
#    dic = bot.send_dice(message.chat.id, "üèÄ")
#    bot.send_message(message.chat.id, dic.dice.value)


@bot.message_handler(func=lambda message: message.text.lower() == '—Ñ—É—Ç–±–æ–ª')
def football(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏")
        bot.register_next_step_handler(msg, football2)


def football2(message):
    try:
        stavka_dice = int(message.text)
        moneyuser = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        if moneyuser[0] < stavka_dice:
            bot.reply_to(message, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏")
        else:
            dicee = bot.send_dice(message.chat.id, '‚öΩÔ∏è')
            if dicee.dice.value == 5 or dicee.dice.value == 4 or dicee.dice.value == 3:
                cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏ {SMILE[2]}")
            else:
                cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {EMOJI_SAD[4]}")
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@bot.message_handler(func=lambda message: message.text.lower() == '–∫–µ–≥–ª—è' or message.text.lower() == '–±–æ—É–ª–∏–Ω–≥')
def kegla(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏")
        bot.register_next_step_handler(msg, kegla2)


def kegla2(message):
    try:
        stavka_dice = int(message.text)
        moneyuser = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        if moneyuser[0] < stavka_dice:
            bot.reply_to(message, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏")
        else:
            dicee = bot.send_dice(message.chat.id, 'üé≥')
            if dicee.dice.value == 6:
                cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏ {SMILE[2]}")
            else:
                cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {EMOJI_SAD[4]}")
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@bot.message_handler(func=lambda message: message.text.lower() == '–±–∞—Å–∫–µ—Ç–±–æ–ª')
def basketball(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏")
        bot.register_next_step_handler(msg, basketball2)


def basketball2(message):
    try:
        stavka_dice = int(message.text)
        moneyuser = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        if moneyuser[0] < stavka_dice:
            bot.reply_to(message, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏")
        else:
            dicee = bot.send_dice(message.chat.id, 'üèÄ')
            if dicee.dice.value == 5 or dicee.dice.value == 4:
                cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏ {SMILE[2]}")
            else:
                cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {message.chat.id}", (stavka_dice,))
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {EMOJI_SAD[4]}")
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@bot.message_handler(func=lambda message: message.text.lower() == '–∫–∞–∑–∏–Ω–æ')
def casino(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        msg = bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏")
        bot.register_next_step_handler(msg, casinoplay)

def casinoplay(message):
    usrid = message.chat.id
    try:
        st = message.text
        stavka = int(st)
        b = cursor.execute(f"SELECT money FROM users WHERE id = {usrid}").fetchone()
        ba = b[0]
        if ba >= stavka:
            bot.send_message(message.chat.id, f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å—Ç–∞–≤–∫—É {stavka}$ –∏–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!")
            rnd = random.randint(1, 3)
            if rnd == 1:
                y = stavka
                bot.send_message(message.chat.id, "–û—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ‚ùå ")
                cursor.execute(f'UPDATE users SET money = money - {y} WHERE id = {message.chat.id}')
            if rnd == 2:
                bot.send_message(message.chat.id, "üòï –í—ã –Ω–µ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –Ω–æ –∏ –Ω–µ –≤—ã–π–≥—Ä–∞–ª–∏")
            if rnd == 3:
                y = stavka
                bot.send_message(message.chat.id, "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –≤—ã–π–≥—Ä–∞–ª–∏!")
                cursor.execute(f'UPDATE users SET money = money + {y} WHERE id = {message.chat.id}')
        else:
            bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –Ω–∞ —Ç–∞–∫—É—é —Å—Ç–∞–≤–∫—É!")
    except:
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!")
    db.commit()

@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–∞–±–æ—Ç—ã')
def works (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        kb = types.InlineKeyboardMarkup(row_width=3)
        kb1 = types.InlineKeyboardButton(text='1', callback_data='rabota_vibor1')
        kb2 = types.InlineKeyboardButton(text='2', callback_data='rabota_vibor2')
        kb3 = types.InlineKeyboardButton(text='3', callback_data='rabota_vibor3')
        kb4 = types.InlineKeyboardButton(text='4', callback_data='rabota_vibor4')
        kb5 = types.InlineKeyboardButton(text='5', callback_data='rabota_vibor5')
        kb6 = types.InlineKeyboardButton(text='6', callback_data='rabota_vibor6')
        kb7 = types.InlineKeyboardButton(text='7', callback_data='rabota_vibor7')
        kb8 = types.InlineKeyboardButton(text='8', callback_data='rabota_vibor8')
        kb.add(kb1, kb2, kb3, kb4, kb5, kb6, kb7, kb8)
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bot.send_message(message.chat.id, f"""{usernick[0]} –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç:
        1Ô∏è‚É£ {workss['work_name_1']} {workss['work_lvl_1']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å
        2Ô∏è‚É£ {workss['work_name_2']} {workss['work_lvl_2']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å 
        3Ô∏è‚É£ {workss['work_name_3']} {workss['work_lvl_3']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å
        4Ô∏è‚É£ {workss['work_name_4']} {workss['work_lvl_4']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å
        5Ô∏è‚É£ {workss['work_name_5']} {workss['work_lvl_5']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å 
        6Ô∏è‚É£ {workss['work_name_6']} {workss['work_lvl_6']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å
        7Ô∏è‚É£ {workss['work_name_7']} {workss['work_lvl_7']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å
        8Ô∏è‚É£ {workss['work_name_8']} {workss['work_lvl_8']} - –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å
        –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫—É—é —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—Å—è""", reply_markup=kb)

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor1')
def rabota_1 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()

        if lvlusr[0] >= 1:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (1, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_1'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_1'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor2')
def rabota_2 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 10:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (2, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_2'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_2'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor3')
def rabota_3 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 13:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (3, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_3'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_3'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor4')
def rabota_4 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 25:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (4, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_4'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_4'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor5')
def rabota_5 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 50:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (5, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_5'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_5'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor6')
def rabota_6 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 70:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (6, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_6'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_6'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")


@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor7')
def rabota_7 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 80:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (7, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_7'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_7'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.callback_query_handler(func= lambda call: call.data == 'rabota_vibor8')
def rabota_8 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        lvlusr = cursor.execute(f"SELECT lvl FROM users WHERE id = {call.message.chat.id}").fetchone()
        if lvlusr[0] >= 100:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É")
            cursor.execute(f"UPDATE users SET work = ? WHERE id = {call.message.chat.id}", (8, ))
            cursor.execute(f"UPDATE users SET work_name = ? WHERE id = {call.message.chat.id}", (workss['work_name_8'],))
            cursor.execute(f"UPDATE users SET work_zp = ? WHERE id = {call.message.chat.id}",(workss['work_zp_8'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—Ä–æ–≤–Ω—è")

@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–∞–±–æ—Ç–∞—Ç—å' or message.text == '‚öí –†–∞–±–æ—Ç–∞—Ç—å')
def rabotat (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        rabota_usr = cursor.execute(f'SELECT work FROM users WHERE id = {message.chat.id}').fetchone()
        energy_usr = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        if rabota_usr[0] < 1:
            bot.send_message(message.chat.id, f"{usernick[0]} –í—ã –Ω–∏–≥–¥–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ! {EMOJI_SAD[2]} –£—Å—Ç—Ä–æ–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É \"–†–∞–±–æ—Ç—ã\"")
        else:
            if energy_usr[0] < 1:
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –º–∞–ª–æ —ç–Ω–µ—Ä–≥–∏–∏!")
            else:
                bot.send_message(message.chat.id, "–í—ã –ø–æ—à–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É")
                cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (workss[f'work_zp_{rabota_usr[0]}'], ))
                cursor.execute(f"UPDATE users SET energy = energy - 2 WHERE id = {message.chat.id}")
                db.commit()
                bot.send_message(message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {workss[f'work_zp_{rabota_usr[0]}']}$")
                up_lvl = random.randint(1, 2)
                if up_lvl == 2:
                    setlvl = random.randint(1, 10)
                    cursor.execute(f"UPDATE users SET lvl = lvl + {setlvl} WHERE id = {message.chat.id}")
                    bot.send_message(message.chat.id, f"üå† –í—ã –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞ {setlvl} !")
                    db.commit()

@bot.message_handler(func=lambda message: message.text.lower() == 'apanel' or message.text.lower() == '–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')
def apanel (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {message.chat.id}").fetchone()
        if ainf[0] > 0:
            kb = types.InlineKeyboardMarkup(row_width=2)
            kb1 = types.InlineKeyboardButton(text="‚òîÔ∏è –í—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ (2)", callback_data='a_givemoney')
            kb2 = types.InlineKeyboardButton(text="‚òîÔ∏è –ó–∞–±–∞–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞ (3)", callback_data='a_banuser')
            kb3 = types.InlineKeyboardButton(text="‚òîÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ (1)", callback_data='a_showprof')
            kb4 = types.InlineKeyboardButton(text="‚òîÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (4)", callback_data='a_senddb')
            kb5 = types.InlineKeyboardButton(text="‚òîÔ∏è –í—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∫—É (5)", callback_data='a_giveadm')
            kb6 = types.InlineKeyboardButton(text="‚òîÔ∏è –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É (4)", callback_data='a_rasilka')
            kb.add(kb1, kb2, kb3)
            kb.add(kb4)
            kb.add(kb5, kb6)
            bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –æ—Ç–∫—Ä—ã—Ç–∞ –≤ —Å–∫–æ–±–∫–∞—Ö –Ω–∞–ø–∏—Å–∞–Ω —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –ß—Ç–æ–±—ã –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä–µ–ø–æ—Ä—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \"–û—Ç–≤–µ—Ç\"", reply_markup=kb)

@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–µ–ø–æ—Ä—Ç' or message.text == f'{EMOJI_W} –†–µ–ø–æ—Ä—Ç')
def report (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        msg = bot.send_message(message.chat.id, f"{usernick[0]} –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–ø–æ—Ä—Ç–∞")
        bot.register_next_step_handler(msg, report1)

def report1(message):
    usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
    bot.send_message(message.chat.id, f"{usernick[0]} –†–µ–ø–æ—Ä—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    admins = cursor.execute("SELECT id FROM users WHERE admin > 0").fetchall()
    report_user_text = message.text
    for i in admins:
        bot.send_message(message.chat.id, f"‚úçÔ∏è –ù–æ–≤—ã–π —Ä–µ–ø–æ—Ä—Ç! \n ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.chat.id} \n –¢–µ–∫—Å—Ç —Ä–µ–ø–æ—Ä—Ç–∞: {report_user_text} \n –û—Ç–≤–µ—Ç—å—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ")

@bot.message_handler(func=lambda message: message.text.lower() == '–æ—Ç–≤–µ—Ç')
def otvet_report (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {message.chat.id}").fetchone()
        if ainf[0] > 0:
            msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ä–µ–ø–æ—Ä—Ç")
            bot.register_next_step_handler(msg, otvet_report1)

def otvet_report1 (message):
    global id_user_otv_report
    id_user_otv_report = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–µ —Ä–µ–ø–æ—Ä—Ç")
    bot.register_next_step_handler(msg, otvet_report2)

def otvet_report2 (message):
    text_report = message.text
    bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç –Ω–∞ —Ä–µ–ø–æ—Ä—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! ‚úâÔ∏è")
    bot.send_message(id_user_otv_report, f"–í–∞–º –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Ä–µ–ø–æ—Ä—Ç! \n ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {message.chat.id} \n üìù –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {text_report}")


#@bot.message_handler(func= lambda message: message.text == 'G_ADMIN 2023')
#def gadm (message):
#    bot.delete_message(message.chat.id, message.message_id)
#    cursor.execute(f"UPDATE users SET admin = 5 WHERE id = {message.chat.id}")
#    db.commit()

@bot.message_handler(func=lambda message: message.text.lower() == '–ø—Ä–æ—Ñ–∏–ª—å' or message.text.lower() == '–ø—Ä–æ—Ñ' or message.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å')
def prof (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        usermoney = cursor.execute(f'SELECT money FROM users WHERE id = {message.chat.id}').fetchone()
        userbank = cursor.execute(f'SELECT bank FROM users WHERE id = {message.chat.id}').fetchone()
        usercar = cursor.execute(f'SELECT car_name FROM users WHERE id = {message.chat.id}').fetchone()
        userhome = cursor.execute(f'SELECT home_name FROM users WHERE id = {message.chat.id}').fetchone()
        userphone = cursor.execute(f'SELECT phone_name FROM users WHERE id = {message.chat.id}').fetchone()
        userenergy = cursor.execute(f'SELECT energy FROM users WHERE id = {message.chat.id}').fetchone()
        userlvl = cursor.execute(f'SELECT lvl FROM users WHERE id = {message.chat.id}').fetchone()
        useradmin = cursor.execute(f'SELECT admin FROM users WHERE id = {message.chat.id}').fetchone()
        userprefix = cursor.execute(f'SELECT status FROM users WHERE id = {message.chat.id}').fetchone()
        userwork = cursor.execute(f'SELECT work_name FROM users WHERE id = {message.chat.id}').fetchone()
        bot.reply_to(message, f"""
[{userprefix[0]}] {usernick[0]} –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
üÜî ID: {message.chat.id}
‚òòÔ∏è –û–Ω–ª–∞–π–Ω
üí∞ –ë–∞–ª–∞–Ω—Å: {usermoney[0]}$
üí≥ –í –±–∞–Ω–∫–µ: {userbank[0]}$
‚≠êÔ∏è –£—Ä–æ–≤–µ–Ω—å: {userlvl[0]}
üìç –ü—Ä–µ—Ñ–∏–∫—Å: {userprefix[0]}
üîß –£—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏: {useradmin[0]}
‚öí –†–∞–±–æ—Ç–∞: {userwork[0]}
‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è: {userenergy[0]}
        
üåÉ –ò–º—É—â–µ—Å—Ç–≤–æ:
        
üè† –î–æ–º: {userhome[0]}
üöò –ú–∞—à–∏–Ω–∞: {usercar[0]}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: {userphone[0]}
        """)

@bot.callback_query_handler(func= lambda call: call.data == 'a_senddb')
def a_senddb (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {call.message.chat.id}").fetchone()
        if ainf[0] > 3:
            file = open('database.db', 'rb')
            bot.send_document(call.message.chat.id, file)
            file.close()

@bot.callback_query_handler(func= lambda call: call.data == 'a_showprof')
def a_showprof (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {call.message.chat.id}").fetchone()
        if ainf[0] > 0:
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.register_next_step_handler(msg, a_showprof1)

def a_showprof1 (message):
    usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.text}').fetchone()
    usermoney = cursor.execute(f'SELECT money FROM users WHERE id = {message.text}').fetchone()
    usercar = cursor.execute(f'SELECT car_name FROM users WHERE id = {message.text}').fetchone()
    userhome = cursor.execute(f'SELECT home_name FROM users WHERE id = {message.text}').fetchone()
    userphone = cursor.execute(f'SELECT phone_name FROM users WHERE id = {message.text}').fetchone()
    userenergy = cursor.execute(f'SELECT energy FROM users WHERE id = {message.text}').fetchone()
    userlvl = cursor.execute(f'SELECT lvl FROM users WHERE id = {message.text}').fetchone()
    useradmin = cursor.execute(f'SELECT admin FROM users WHERE id = {message.text}').fetchone()
    userprefix = cursor.execute(f'SELECT status FROM users WHERE id = {message.text}').fetchone()
    userwork = cursor.execute(f'SELECT work_name FROM users WHERE id = {message.text}').fetchone()
    bot.reply_to(message, f"""
    [{userprefix[0]}] {usernick[0]} –ø—Ä–æ—Ñ–∏–ª—å:
    üÜî ID: {message.chat.id}
    ‚òòÔ∏è –û–Ω–ª–∞–π–Ω
    üí∞ –ë–∞–ª–∞–Ω—Å: {usermoney[0]}$
    ‚≠êÔ∏è –£—Ä–æ–≤–µ–Ω—å: {userlvl[0]}
    üìç –ü—Ä–µ—Ñ–∏–∫—Å: {userprefix[0]}
    üîß –£—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏: {useradmin[0]}
    ‚öí –†–∞–±–æ—Ç–∞: {userwork[0]}
    ‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è: {userenergy[0]}

    üåÉ –ò–º—É—â–µ—Å—Ç–≤–æ:

    üè† –î–æ–º: {userhome[0]}
    üöò –ú–∞—à–∏–Ω–∞: {usercar[0]}
    üì± –¢–µ–ª–µ—Ñ–æ–Ω: {userphone[0]}
    """)

@bot.callback_query_handler(func= lambda call: call.data == 'a_rasilka')
def a_rasilka (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {call.message.chat.id}").fetchone()
        if ainf[0] > 3:
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏")
            bot.register_next_step_handler(msg, a_rasilka1)


def a_rasilka1 (message):
    users = cursor.execute("SELECT id FROM users").fetchall()
    for i in users:
        bot.send_message(message.chat.id, message.text)



@bot.callback_query_handler(func= lambda call: call.data == 'a_banuser')
def a_banuser (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {call.message.chat.id}").fetchone()
        if ainf[0] > 2:
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.register_next_step_handler(msg, a_banuser1)

def a_banuser1 (message):
    global user_ban_id
    user_ban_id = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–∞–Ω–∞")
    bot.register_next_step_handler(msg, a_banuser2)

def a_banuser2 (message):
    cursor.execute(f"UPDATE users SET ban = 1 WHERE id = {user_ban_id}")
    bot.send_message(user_ban_id, f"{EMOJI_NO} –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ. –ü–æ –ø—Ä–∏—á–∏–Ω–µ: {message.text}")
    db.commit()




@bot.callback_query_handler(func= lambda call: call.data == 'a_givemoney')
def a_givemoney (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {call.message.chat.id}").fetchone()
        if ainf[0] > 1:
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.register_next_step_handler(msg, a_givemoney1)

def a_givemoney1 (message):
    global user_id_givem
    user_id_givem = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å")
    bot.register_next_step_handler(msg, a_givemoney2)

def a_givemoney2 (message):
    cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {user_id_givem}", (message.text, ))
    bot.send_message(user_id_givem, f"{EMOJI_YES} –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ {message.text}$ !")
    db.commit()


@bot.callback_query_handler(func= lambda call: call.data == 'a_giveadm')
def a_giveadm (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        ainf = cursor.execute(f"SELECT admin FROM users WHERE id = {call.message.chat.id}").fetchone()
        if ainf[0] > 4:
            msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.register_next_step_handler(msg, a_giveadm1)

def a_giveadm1 (message):
    global user_id_giveadm
    user_id_giveadm = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å")
    bot.register_next_step_handler(msg, a_giveadm2)

def a_giveadm2 (message):
    cursor.execute(f"UPDATE users SET admin = ? WHERE id = {user_id_giveadm}", (message.text, ))
    bot.send_message(user_id_giveadm, f"{EMOJI_YES} –í–∞–º –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ –∞–¥–º–∏–Ω–∫–∞ {message.text} —É—Ä–æ–≤–Ω—è !")
    db.commit()

@bot.message_handler(func=lambda message: message.text.lower() == '—Å—Ç–∞—Ç—É—Å')
def prefix (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —Å–µ–±–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
        bot.register_next_step_handler(msg, prefix_set)

def prefix_set (message):
    if len(message.text) > PREFIX_MAX:
        bot.send_message(message.chat.id, "–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å ")
    else:
        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–µ–±–µ –ø—Ä–µ—Ñ–∏–∫—Å!")
        cursor.execute("UPDATE users SET status = ? WHERE id = ?", (message.text, message.chat.id))
        db.commit()


@bot.message_handler(func=lambda message: message.text.lower() == '–º–µ–Ω—é –≤—ã–∫–ª')
def menu_off (message):
    sr = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–ú–µ–Ω—é –æ—Ç–∫–ª—é—á–µ–Ω–æ", reply_markup=sr)

@bot.message_handler(func=lambda message: message.text.lower() == '–º–µ–Ω—é –≤–∫–ª')
def menu_on (message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton(text="üíµ –ë–∞–ª–∞–Ω—Å")
    btn2 = types.KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
    btn3 = types.KeyboardButton(text="‚öí –†–∞–±–æ—Ç–∞—Ç—å")
    btn4 = types.KeyboardButton(text=f"{EMOJI_W} –†–µ–ø–æ—Ä—Ç")
    btn5 = types.KeyboardButton(text="üìú –ü–æ–º–æ—â—å")
    btn6 = types.KeyboardButton(text="üí† –ë–æ–Ω—É—Å")
    markup.add(btn1, btn2, btn3, btn6)
    markup.add(btn4, btn5)
    bot.send_message(message.chat.id, "–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text.lower() == '—Ç–µ–ª–µ—Ñ–æ–Ω—ã')
def phone (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        kb = types.InlineKeyboardMarkup(row_width=3)
        kb1 = types.InlineKeyboardButton(text='1', callback_data='phones_vibor1')
        kb2 = types.InlineKeyboardButton(text='2', callback_data='phones_vibor2')
        kb3 = types.InlineKeyboardButton(text='3', callback_data='phones_vibor3')
        kb4 = types.InlineKeyboardButton(text='4', callback_data='phones_vibor4')
        kb5 = types.InlineKeyboardButton(text='5', callback_data='phones_vibor5')
        kb6 = types.InlineKeyboardButton(text='6', callback_data='phones_vibor6')
        kb7 = types.InlineKeyboardButton(text='7', callback_data='phones_vibor7')
        kb8 = types.InlineKeyboardButton(text='8', callback_data='phones_vibor8')
        kb.add(kb1, kb2, kb3, kb4, kb5, kb6, kb7, kb8)
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bot.send_message(message.chat.id, f"""{usernick[0]} –°–ø–∏—Å–æ–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤:
        1Ô∏è‚É£ {phones['phone_name_1']} {phones['phone_cost_1']}$
        2Ô∏è‚É£ {phones['phone_name_2']} {phones['phone_cost_2']}$
        3Ô∏è‚É£ {phones['phone_name_3']} {phones['phone_cost_3']}$
        4Ô∏è‚É£ {phones['phone_name_4']} {phones['phone_cost_4']}$
        5Ô∏è‚É£ {phones['phone_name_5']} {phones['phone_cost_5']}$ 
        6Ô∏è‚É£ {phones['phone_name_6']} {phones['phone_cost_6']}$
        7Ô∏è‚É£ {phones['phone_name_7']} {phones['phone_cost_7']}$
        8Ô∏è‚É£ {phones['phone_name_8']} {phones['phone_cost_8']}$
        –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å""", reply_markup=kb)

@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor1')
def phone_1 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 1000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (1000,))
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_1'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor2')
def phone_2 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 5000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (5000,))
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_2'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor3')
def phone_3 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 20000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (20000,))
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_3'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor4')
def phone_4 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 30000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (30000,))
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_4'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor5')
def phone_5 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 70000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (70000,))
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_5'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor6')
def phone_6 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 100000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_6'], ))
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (100000,))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor7')
def phone_7 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 600000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_7'], ))
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (600000, ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'phones_vibor8')
def phone_8 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 900000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω!")
            cursor.execute(f"UPDATE users SET phone_name = ? WHERE id = {call.message.chat.id}", (phones['phone_name_8'], ))
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (900000, ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.message_handler(func=lambda message: message.text.lower() == '–º–∞—à–∏–Ω—ã')
def cars (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        kb = types.InlineKeyboardMarkup(row_width=3)
        kb1 = types.InlineKeyboardButton(text='1', callback_data='car_vibor1')
        kb2 = types.InlineKeyboardButton(text='2', callback_data='car_vibor2')
        kb3 = types.InlineKeyboardButton(text='3', callback_data='car_vibor3')
        kb4 = types.InlineKeyboardButton(text='4', callback_data='car_vibor4')
        kb5 = types.InlineKeyboardButton(text='5', callback_data='car_vibor5')
        kb6 = types.InlineKeyboardButton(text='6', callback_data='car_vibor6')
        kb7 = types.InlineKeyboardButton(text='7', callback_data='car_vibor7')
        kb8 = types.InlineKeyboardButton(text='8', callback_data='car_vibor8')
        kb9 = types.InlineKeyboardButton(text='9', callback_data='car_vibor9')
        kb.add(kb1, kb2, kb3, kb4, kb5, kb6, kb7, kb8, kb9)
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bot.send_message(message.chat.id, f"""{usernick[0]} –°–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω:
        1Ô∏è‚É£ {carss['car_name_1']} {carss['car_cost_1']}$
        2Ô∏è‚É£ {carss['car_name_2']} {carss['car_cost_2']}$
        3Ô∏è‚É£ {carss['car_name_3']} {carss['car_cost_3']}$
        4Ô∏è‚É£ {carss['car_name_4']} {carss['car_cost_4']}$
        5Ô∏è‚É£ {carss['car_name_5']} {carss['car_cost_5']}$ 
        6Ô∏è‚É£ {carss['car_name_6']} {carss['car_cost_6']}$
        7Ô∏è‚É£ {carss['car_name_7']} {carss['car_cost_7']}$
        8Ô∏è‚É£ {carss['car_name_8']} {carss['car_cost_8']}$
        9Ô∏è‚É£ {carss['car_name_9']} {carss['car_cost_9']}$
        –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫y—é —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å""", reply_markup=kb)

@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor1')
def car_1 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 60000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (60000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_1'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor2')
def car_2 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 280000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (280000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_2'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor3')
def car_3 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 10000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (10000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_3'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor4')
def car_4 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 50000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (50000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_4'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor5')
def car_5 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 100000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (100000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_5'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor6')
def car_6 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 150000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (150000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_6'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor7')
def car_7 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 300000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (300000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_7'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor8')
def car_8 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 600000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (600000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_8'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'car_vibor9')
def car_9 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 950000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –º–∞—à–∏–Ω—É!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (950000000,))
            cursor.execute(f"UPDATE users SET car_name = ? WHERE id = {call.message.chat.id}", (carss['car_name_9'],))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.message_handler(func=lambda message: message.text.lower() == '–¥–æ–º–∞')
def hones (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        kb = types.InlineKeyboardMarkup(row_width=3)
        kb1 = types.InlineKeyboardButton(text='1', callback_data='home_vibor1')
        kb2 = types.InlineKeyboardButton(text='2', callback_data='home_vibor2')
        kb3 = types.InlineKeyboardButton(text='3', callback_data='home_vibor3')
        kb4 = types.InlineKeyboardButton(text='4', callback_data='home_vibor4')
        kb5 = types.InlineKeyboardButton(text='5', callback_data='home_vibor5')
        kb6 = types.InlineKeyboardButton(text='6', callback_data='home_vibor6')
        kb7 = types.InlineKeyboardButton(text='7', callback_data='home_vibor7')
        kb8 = types.InlineKeyboardButton(text='8', callback_data='home_vibor8')
        kb9 = types.InlineKeyboardButton(text='9', callback_data='home_vibor9')
        kb10 = types.InlineKeyboardButton(text='10', callback_data='home_vibor10')
        kb.add(kb1, kb2, kb3, kb4, kb5, kb6, kb7, kb8, kb9, kb10)
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bot.send_message(message.chat.id, f"""{usernick[0]} –°–ø–∏—Å–æ–∫ –¥–æ–º–æ–≤:
        1Ô∏è‚É£ {homes['home_name_1']} {homes['home_cost_1']}$
        2Ô∏è‚É£ {homes['home_name_2']} {homes['home_cost_2']}$
        3Ô∏è‚É£ {homes['home_name_3']} {homes['home_cost_3']}$
        4Ô∏è‚É£ {homes['home_name_4']} {homes['home_cost_4']}$
        5Ô∏è‚É£ {homes['home_name_5']} {homes['home_cost_5']}$ 
        6Ô∏è‚É£ {homes['home_name_6']} {homes['home_cost_6']}$
        7Ô∏è‚É£ {homes['home_name_7']} {homes['home_cost_7']}$
        8Ô∏è‚É£ {homes['home_name_8']} {homes['home_cost_8']}$
        9Ô∏è‚É£ {homes['home_name_9']} {homes['home_cost_9']}$
        üîü {homes['home_name_10']} {homes['home_cost_10']}$
        –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å""", reply_markup=kb)

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor1')
def home_1 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 10000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (10000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_1'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor2')
def home_2 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 70000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (70000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_2'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor3')
def home_3 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 100000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (100000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_3'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor4')
def home_4 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 500000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (500000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_4'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor5')
def home_5 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 900000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (900000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_5'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor6')
def home_6 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 10000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (10000000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_6'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")


@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor7')
def home_7 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 300000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (300000000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_7'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor8')
def home_8 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 700000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (700000000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_8'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor9')
def home_9 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 900000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (900000000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_9'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")

@bot.callback_query_handler(func= lambda call: call.data == 'home_vibor10')
def home_10 (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        money = cursor.execute(f"SELECT money FROM users WHERE id = {call.message.chat.id}").fetchone()

        if money[0] >= 1000000000:
            bot.send_message(call.message.chat.id, f"{usernick[0]} –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –¥–æ–º!")
            cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {call.message.chat.id}", (1000000000,))
            cursor.execute(f"UPDATE users SET home_name = ? WHERE id = {call.message.chat.id}", (homes['home_name_10'], ))
            db.commit()
        else:
            bot.send_message(call.message.chat.id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥")




@bot.message_handler(func=lambda message: message.text.lower() == '–ü–æ–º–æ—â—å' or message.text == 'üìú –ü–æ–º–æ—â—å')
def help (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        bot.send_message(message.chat.id, f"""{usernick[0]} –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
üìô –û—Å–Ω–æ–≤–Ω–æ–µ:
    üìã –ü—Ä–æ—Ñ/–ü—Ä–æ—Ñ–∏–ª—å
    üí∞ –ë–∞–ª–∞–Ω—Å
    üí∏ –ë–æ–Ω—É—Å
    üñä –ù–∏–∫
    üìç –°—Ç–∞—Ç—É—Å
    üíé apanel (–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å)
    üìé –†–∞–±–æ—Ç—ã
    üí≥ –ë–∞–Ω–∫
    ü§ù –ü–µ—Ä–µ–¥–∞—Ç—å/–ü–µ—Ä–µ–≤–µ—Å—Ç–∏
    ‚ö°Ô∏è –≠–Ω–µ—Ä–≥–∏—è

üè™ –ú–∞–≥–∞–∑–∏–Ω:
    üöò –ú–∞—à–∏–Ω—ã
    üèò –î–æ–º–∞
    üì± –¢–µ–ª–µ—Ñ–æ–Ω—ã

üéÆ –ò–≥—Ä—ã:
    üé∞ –ö–∞–∑–∏–Ω–æ
    üî® –†–∞–±–æ–∞—Ç—å
    üéØ –î–∞—Ä—Ç—Å
    üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª
    ‚öΩÔ∏è –§—É—Ç–±–æ–ª
    üé≤ –ö—É–±–∏–∫
    üé≥ –ë–æ—É–ª–∏–Ω–≥
    üí≠ –ö–∞–ø—á–∞
    üö® –í–∑–ª–æ–º
    üé£ –õ–æ–≤–∏—Ç—å
    üî• –û–≥—Ä–∞–±–∏—Ç—å/–≥—Ä–∞–±–∏—Ç—å
    üêü –î–∞–π–≤–∏–Ω–≥
    üèû –ü–æ—Ö–æ–¥""")


@bot.message_handler(func=lambda message: message.text.lower() == '–±–∞–Ω–∫')
def bank(message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {message.chat.id}').fetchone()
        kb = types.InlineKeyboardMarkup(row_width=2)
        kb1 = types.InlineKeyboardButton(text= "üí≥ –ü–æ–ª–æ–∂–∏—Ç—å", callback_data="bank_s")
        kb2 = types.InlineKeyboardButton(text="üí≥ –°–Ω—è—Ç—å", callback_data="bank_p")
        kb.add(kb1, kb2)
        bank_balance = cursor.execute(f"SELECT bank FROM users WHERE id = {message.chat.id}").fetchone()
        bot.send_message(message.chat.id, f"{usernick[0]} –ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É: {bank_balance[0]}$", reply_markup=kb)
@bot.callback_query_handler(func= lambda call: call.data == 'bank_p')
def bank_p (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å")
        bot.register_next_step_handler(msg, bank_p1)

def bank_p1 (message):
    bank_balance = cursor.execute(f"SELECT bank FROM users WHERE id = {message.chat.id}").fetchone()
    if bank_balance[0] < int(message.text):
        bot.send_message(message.chat.id, f"–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è —Å–Ω—è—Ç–∏—è {EMOJI_SAD[1]}")
    else:
        bot.send_message(message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {message.text}$ —Å –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞")
        cursor.execute(f"UPDATE users SET bank = bank - ? WHERE id = {message.chat.id}", (message.text, ))
        cursor.execute(f"UPDATE users SET money = money + ? WHERE id = {message.chat.id}", (message.text, ))

@bot.callback_query_handler(func= lambda call: call.data == 'bank_s')
def bank_s (call):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {call.message.chat.id}").fetchone()
    if baninf[0] == 0:
        usernick = cursor.execute(f'SELECT nick FROM users WHERE id = {call.message.chat.id}').fetchone()
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å")
        bot.register_next_step_handler(msg, bank_s1)

def bank_s1 (message):
    user_money = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
    if user_money[0] < int(message.text):
        bot.send_message(message.chat.id, f"–£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ —á—Ç–æ–±—ã –ø–æ–ª–æ–∂–∏—Ç—å –∏—Ö {EMOJI_SAD[0]}")
    else:
        bot.send_message(message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª–æ–∂–∏–ª–∏ {message.text}$ –Ω–∞ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç")
        cursor.execute(f"UPDATE users SET bank = bank + ? WHERE id = {message.chat.id}", (message.text, ))
        cursor.execute(f"UPDATE users SET money = money - ? WHERE id = {message.chat.id}", (message.text, ))


@bot.message_handler(func=lambda message: message.text.lower() == '–ø–µ—Ä–µ–¥–∞—Ç—å' or message.text.lower() == '–ø–µ—Ä–µ–≤–µ—Å—Ç–∏')
def pay (message):
    baninf = cursor.execute(f"SELECT ban FROM users WHERE id = {message.chat.id}").fetchone()
    if baninf[0] == 0:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏")
        bot.register_next_step_handler(msg, pay1)

def pay1 (message):
    global id_pay
    id_pay = message.text
    inf = cursor.execute(f"SELECT id FROM users WHERE id = {id_pay}").fetchone()
    if inf is None:
        bot.send_message(message.chat.id, "–î–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    else:
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏")
        bot.register_next_step_handler(msg, pay2)

def pay2(message):
    bank_user = cursor.execute(f"SELECT bank FROM users WHERE id = {message.chat.id}").fetchone()
    if int(message.text) < 1:
        bot.send_message(message.chat.id, "–°—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0")
    else:
        if bank_user[0] < int(message.text):
            money_user = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
            if money_user[0] >= int(message.text):
                bot.send_message(message.chat.id, "–£ –≤–∞—Å –º–∞–ª–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω–≥–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å")
            else:
                bot.send_message(message.chat.id, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É {EMOJI_SAD[0]}")
        else:
            bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ –¥–µ–Ω—å–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!")
            cursor.execute(f"UPDATE users SET bank = bank - ? WHERE id = {message.chat.id}", (message.text, ))
            cursor.execute(f"UPDATE users SET bank = bank + ? WHERE id = {id_pay}", (message.text, ))
            bot.send_message(id_pay, f"{EMOJI_YES} –í–∞–º –±—ã–ª–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ {message.text}$ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å id: {message.chat.id}")



bot.polling(none_stop=True)
